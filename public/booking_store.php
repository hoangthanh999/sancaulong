<?php
require_once __DIR__.'/../config/db.php';
require_once __DIR__.'/../middleware/auth.php';
require_once __DIR__.'/../includes/csrf.php';

if ($_SERVER['REQUEST_METHOD'] !== 'POST') { 
  http_response_code(405); 
  exit; 
}

csrf_check();

session_start();
date_default_timezone_set('Asia/Ho_Chi_Minh');

$user_id    = $_SESSION['user']['id'] ?? 0;
$court_id   = (int)($_POST['court_id'] ?? 0);
$day        = trim($_POST['booking_date'] ?? '');
$start_time = trim($_POST['start_time'] ?? '');
$end_time   = trim($_POST['end_time'] ?? '');
$notes      = trim($_POST['notes'] ?? '');

if (!$court_id || !$day || !$start_time || !$end_time) { 
  flash('error', 'Thi·∫øu th√¥ng tin ƒë·∫∑t s√¢n.'); 
  header('Location: '.BASE_URL.'/booking.php'); 
  exit; 
}

// ‚úÖ Ki·ªÉm tra ƒë·ªãnh d·∫°ng gi·ªù
if (strtotime($end_time) <= strtotime($start_time)) {
  flash('error', '‚õî Gi·ªù k·∫øt th√∫c ph·∫£i l·ªõn h∆°n gi·ªù b·∫Øt ƒë·∫ßu.');
  header('Location: '.BASE_URL.'/booking.php');
  exit;
}

// ‚úÖ Ki·ªÉm tra kh√¥ng cho ƒë·∫∑t gi·ªù trong qu√° kh·ª©
$currentDate = date('Y-m-d');
$currentTime = date('H:i:s');

if ($day < $currentDate) {
  flash('error', '‚õî Ng√†y ƒë·∫∑t s√¢n ƒë√£ qua.');
  header('Location: '.BASE_URL.'/booking.php');
  exit;
}
if ($day === $currentDate && $start_time <= $currentTime) {
  flash('error', '‚õî Khung gi·ªù n√†y ƒë√£ qua.');
  header('Location: '.BASE_URL.'/booking.php');
  exit;
}

try {
  $pdo->beginTransaction();

  // üîç 1Ô∏è‚É£ Ki·ªÉm tra tr√πng l·ªãch (kho·∫£ng gi·ªù ch·ªìng nhau)
  $st = $pdo->prepare("
      SELECT id 
      FROM bookings 
      WHERE court_id = ? 
        AND booking_date = ? 
        AND status IN ('pending','approved') 
        AND NOT (end_time <= ? OR start_time >= ?)
      FOR UPDATE
  ");
  // => Kh√¥ng tr√πng n·∫øu: end_time <= start_time_m·ªõi OR start_time >= end_time_m·ªõi
  $st->execute([$court_id, $day, $start_time, $end_time]);
  if ($st->fetch()) {
    $pdo->rollBack();
    flash('error', '‚ö†Ô∏è Th·ªùi gian n√†y ƒë√£ c√≥ ng∆∞·ªùi ƒë·∫∑t tr∆∞·ªõc.');
    header('Location: '.BASE_URL.'/booking.php?court_id='.$court_id);
    exit;
  }

  // üí∞ 2Ô∏è‚É£ L·∫•y gi√° s√¢n
  $st = $pdo->prepare("SELECT price_per_hour FROM courts WHERE id=? AND status='active'");
  $st->execute([$court_id]);
  $court = $st->fetch(PDO::FETCH_ASSOC);

  if (!$court) {
    $pdo->rollBack();
    flash('error', '‚ùå S√¢n kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ b·ªã kh√≥a.');
    header('Location: '.BASE_URL.'/index.php');
    exit;
  }

  $pricePerHour = (float)$court['price_per_hour'];

  // üïí 3Ô∏è‚É£ T√≠nh ti·ªÅn theo gi·ªù l·∫ª
  $minutes = (strtotime($end_time) - strtotime($start_time)) / 60;
  $hours = $minutes / 60.0;
  $total_price = round($pricePerHour * $hours);
  $deposit = round($total_price * 0.15);

  // üßæ 4Ô∏è‚É£ L∆∞u ƒë∆°n ƒë·∫∑t s√¢n
  $ins = $pdo->prepare("
      INSERT INTO bookings 
      (user_id, court_id, booking_date, start_time, end_time, total_price, deposit, deposit_status, status, notes, created_at)
      VALUES (?, ?, ?, ?, ?, ?, ?, 'pending', 'pending', ?, NOW())
  ");
  $ins->execute([$user_id, $court_id, $day, $start_time, $end_time, $total_price, $deposit, $notes]);

  $lastId = $pdo->lastInsertId();

  // ‚úÖ 5Ô∏è‚É£ Ho√†n t·∫•t
  $pdo->commit();
  flash('success', '‚úÖ ƒê·∫∑t s√¢n th√†nh c√¥ng! Vui l√≤ng thanh to√°n c·ªçc 15% ƒë·ªÉ gi·ªØ s√¢n.');
  header('Location: '.BASE_URL.'/payment.php?id='.$lastId);
  exit;

} catch (Throwable $e) {
  if ($pdo->inTransaction()) $pdo->rollBack();
  flash('error', 'L·ªói h·ªá th·ªëng: '.htmlspecialchars($e->getMessage()));
  header('Location: '.BASE_URL.'/booking.php');
  exit;
}
